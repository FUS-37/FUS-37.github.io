{"title":"【混音】native/dsp/fpga傻傻分不清，以及二手羚羊ZenGo评测","uid":"1128d575894250c8a5bebf5b764a7d4f","slug":"fpga","date":"2025-03-30T08:58:19.000Z","updated":"2025-04-23T02:28:32.099Z","comments":true,"path":"api/articles/fpga.json","keywords":null,"cover":"https://w3svwsauq3bn5lj.oss-cn-beijing.aliyuncs.com/img/reoenl%20(2).jpg","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"\\assets\\css\\APlayer.min.css\"><script src=\"\\assets\\js\\APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>native插件和dsp插件真的和厂家说的那般，完全没有区别吗？我好几次在群里看到有人为此争论不休。有没有可能，它们两个确实没有区别，有区别的是fpga呢！</p>\n<h2 id=\"一，native插件和dsp插件最后的效果为什么是一样的？\"><a href=\"#一，native插件和dsp插件最后的效果为什么是一样的？\" class=\"headerlink\" title=\"一，native插件和dsp插件最后的效果为什么是一样的？\"></a>一，native插件和dsp插件最后的效果为什么是一样的？</h2><p>说白了native插件就是拿cpu跑，dsp插件是跑在特定的硬件上，也就是市面上叫dsp加速卡的一类硬件，当然也有一些是把dsp芯片直接放进声卡里了。</p>\n<p>cpu是通用计算芯片，dsp是数字信号处理芯片。它们两个都是处理的数字信号。好比是同一张满分100分的试卷，cpu和dsp一起去做，不过机器不像人，给它们的任务一定会不折不扣地做完。一个做的慢一点，另外一个快一点，仅此而已。</p>\n<p>原理上来说，两个都是做的相同的事情，没有理由会不一样。我也看到了一些人的反相抵消的检测结果，可以说是和原理是符合的。</p>\n<h2 id=\"二，fpga为什么不一样？\"><a href=\"#二，fpga为什么不一样？\" class=\"headerlink\" title=\"二，fpga为什么不一样？\"></a>二，fpga为什么不一样？</h2><p>fpga是可编程逻辑器件。一个简单的道理，比起一个采样一个采样地去做计算，能不能干脆不算了，直接处理模拟信号直接出结果。当然想啊，fpga就是直接在芯片上通过编程的方式构建一个电路出来，然后让模拟信号通过这个电路，直接出结果。</p>\n<p>既然它是处理的模拟信号，那么好像也不需要再多做解释了，自然是不一样的。很多时候大家觉得dsp插件的效果比native好，很可能是没有区分native，dsp和fpga。</p>\n<h2 id=\"三，一个简单的解释，maybe？\"><a href=\"#三，一个简单的解释，maybe？\" class=\"headerlink\" title=\"三，一个简单的解释，maybe？\"></a>三，一个简单的解释，maybe？</h2><p>如果你非要问为什么的话，一个简单的解释是，事实上dsp根本不可能完美建模，以电容C为例，它是一个定值吗？并不是！俗话说电容叫“通交阻直”，频率越低，电容C的阻碍作用越明显，反之频率越高，电容C的阻碍作用越小。</p>\n<p>傅里叶变换一下就会发现C的值是与经过信号的频率f有关的，实际上拉普拉斯变换，写成复频率s的形式更直观地表现了这一过程，即Z&#x3D;1&#x2F;sC。所谓物理建模，一种常见方式是将所有电子元件通过拉普拉斯变换得到一个等效模型，再通过串并联的方式得到电路的系统函数。</p>\n<p>然而这个过程没有办法很好地体现电路对信号在时域的影响，因为它是在线性时不变系统的条件下进行的等效，得到的系统函数更多体现的电路的稳态频率响应结果。而音乐的魅力正在于它是非线性的！而且这还没有算电容本身的C的误差，模型Z&#x3D;1&#x2F;sC中的C在实际情况下还会随着电压或频率而变化！</p>\n<h2 id=\"四，也是让我玩上fpga了！\"><a href=\"#四，也是让我玩上fpga了！\" class=\"headerlink\" title=\"四，也是让我玩上fpga了！\"></a>四，也是让我玩上fpga了！</h2><p>上个月，我2k左右的预算逛二手市场，在UAD solo和羚羊Zen Go两款声卡上纠结了好久，最后还是选择了羚羊Zen Go，就是为了它的fpga芯片。我在24年UAD疯狂打折的情况下，买入了不少它家的插件（后来也就是这几天的关税，感觉自己赚到了），原本是打算买UAD solo的，可以分摊一下cpu的压力，但突然就在二手市场看到了Zen Go，想起了它的fpga在芯片，而且还便宜了200左右，最后没忍住以2300的价格入了一块。说起来uad用户转羚羊似乎挺常见的（雾）？</p>\n<p>直接说结论：我不建议任何不想折腾的人玩Zen Go这块声卡！</p>\n<p>毕竟是保加利亚的小厂，前几年就听闻其不稳定的驱动问题。我实际用了一周多，感觉还算好，但还是有些慢的。</p>\n<p>至于dsp+fpga插件，我的评价是瑕不掩瑜。虽然它要桥接才能用，还要占用声卡本身的通道，所以最多就只能桥接2~3个，但它是模拟信号！虽然用起来的手感十分难受，经常卡，插件VU表的指针还时不时不跳了，压缩的染色很少很少，但它是模拟信号！</p>\n<p>官方称是能加载32个插件，指的是在桥接插件内加载插件。它一个桥接可以加载不少，我打算用来做并联压缩。哦对了，它的几个空间效果也还不错。</p>\n<p>至于染色少的问题，我不知道应该说这就是fpga的通病，还是说这是羚羊厂家的风格倾向了。虽然说是在芯片上编程了一个电路，但毕竟体积在那边，不可能把老老大的电子管和变压器放进去，自然也就不会有多少染色了。虽然动态控制的很好，也完全能做到模拟信号的开阔感，但是我还是觉得它的染色比同类型的uad native插件要少，不是几个插件，而是普遍性的少！</p>\n<p>这么看性价比还是也许有的？但我这还是声卡自带了全套插件，外加桥接插件的情况下。不然如果你自己买的话，没有活动的情况下，光桥接插件就要2k左右了。</p>\n","feature":true,"text":"混音分享，以及羚羊ZenGo设备主观使用体验...","permalink":"/post/fpga","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"混音","slug":"混音","count":2,"path":"api/tags/混音.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%EF%BC%8Cnative%E6%8F%92%E4%BB%B6%E5%92%8Cdsp%E6%8F%92%E4%BB%B6%E6%9C%80%E5%90%8E%E7%9A%84%E6%95%88%E6%9E%9C%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%EF%BC%9F\"><span class=\"toc-text\">一，native插件和dsp插件最后的效果为什么是一样的？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%EF%BC%8Cfpga%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%9F\"><span class=\"toc-text\">二，fpga为什么不一样？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%EF%BC%8C%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%A7%A3%E9%87%8A%EF%BC%8Cmaybe%EF%BC%9F\"><span class=\"toc-text\">三，一个简单的解释，maybe？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%EF%BC%8C%E4%B9%9F%E6%98%AF%E8%AE%A9%E6%88%91%E7%8E%A9%E4%B8%8Afpga%E4%BA%86%EF%BC%81\"><span class=\"toc-text\">四，也是让我玩上fpga了！</span></a></li></ol>","author":{"name":"FUS是福斯捏","slug":"blog-author","avatar":"https://w3svwsauq3bn5lj.oss-cn-beijing.aliyuncs.com/img/IMG_2233.png","link":"/","description":"<p>他并不喜欢孤独</p>但身边是一幕幕独角戏","socials":{"github":"https://github.com/FUS-37","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/22665738"},"QQ":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/uN4GSLPxRe"},"email":{"icon":"/svg/email.svg","link":"mailto:1253607602@qq.com"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"作品集","uid":"2febd5c89e29b89770705039b6874e59","slug":"works","date":"2023-02-19T12:57:12.000Z","updated":"2025-06-18T08:27:08.188Z","comments":true,"path":"api/articles/works.json","keywords":null,"cover":"https://w3svwsauq3bn5lj.oss-cn-beijing.aliyuncs.com/img/%E8%9B%B91.jpg","text":"版权声明 Copyright 欢迎访问我的混音作品集网站。本页面所展示的所有混音母带作品均由我本人进行创作，仅供个人非商业用途的展示和说明之用","permalink":"/post/works","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"置顶","slug":"置顶","count":2,"path":"api/tags/置顶.json"}],"author":{"name":"FUS是福斯捏","slug":"blog-author","avatar":"https://w3svwsauq3bn5lj.oss-cn-beijing.aliyuncs.com/img/IMG_2233.png","link":"/","description":"<p>他并不喜欢孤独</p>但身边是一幕幕独角戏","socials":{"github":"https://github.com/FUS-37","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/22665738"},"QQ":{"icon":"/svg/qq.svg","link":"https://qm.qq.com/q/uN4GSLPxRe"},"email":{"icon":"/svg/email.svg","link":"mailto:1253607602@qq.com"}}}},"feature":true}}